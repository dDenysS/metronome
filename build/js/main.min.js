/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/buzz/dist/buzz.js":
/*!****************************************!*\
  !*** ./node_modules/buzz/dist/buzz.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// ----------------------------------------------------------------------------\n// Buzz, a Javascript HTML5 Audio library\n// v1.2.1 - Built 2018-05-10 10:14\n// Licensed under the MIT license.\n// http://buzz.jaysalvat.com/\n// ----------------------------------------------------------------------------\n// Copyright (C) 2010-2018 Jay Salvat\n// http://jaysalvat.com/\n// ----------------------------------------------------------------------------\n(function (context, factory) {\n  \"use strict\";\n\n  if ( true && module.exports) {\n    module.exports = factory();\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function () {\n  \"use strict\";\n\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\n  var buzz = {\n    defaults: {\n      autoplay: false,\n      crossOrigin: null,\n      duration: 5e3,\n      formats: [],\n      loop: false,\n      placeholder: \"--\",\n      preload: \"metadata\",\n      volume: 80,\n      webAudioApi: false,\n      document: window.document\n    },\n    types: {\n      mp3: \"audio/mpeg\",\n      ogg: \"audio/ogg\",\n      wav: \"audio/wav\",\n      aac: \"audio/aac\",\n      m4a: \"audio/x-m4a\"\n    },\n    sounds: [],\n    el: document.createElement(\"audio\"),\n    getAudioContext: function getAudioContext() {\n      if (this.audioCtx === undefined) {\n        try {\n          this.audioCtx = AudioContext ? new AudioContext() : null;\n        } catch (e) {\n          this.audioCtx = null;\n        }\n      }\n\n      return this.audioCtx;\n    },\n    sound: function sound(src, options) {\n      options = options || {};\n      var doc = options.document || buzz.defaults.document;\n      var pid = 0,\n          events = [],\n          eventsOnce = {},\n          supported = buzz.isSupported();\n\n      this.load = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.load();\n        return this;\n      };\n\n      this.play = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.play()[\"catch\"](function () {});\n        return this;\n      };\n\n      this.togglePlay = function () {\n        if (!supported) {\n          return this;\n        }\n\n        if (this.sound.paused) {\n          this.sound.play()[\"catch\"](function () {});\n        } else {\n          this.sound.pause();\n        }\n\n        return this;\n      };\n\n      this.pause = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.pause();\n        return this;\n      };\n\n      this.isPaused = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.paused;\n      };\n\n      this.stop = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.pause();\n        this.setTime(0);\n        return this;\n      };\n\n      this.isEnded = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.ended;\n      };\n\n      this.loop = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.loop = \"loop\";\n        this.bind(\"ended.buzzloop\", function () {\n          this.currentTime = 0;\n          this.play();\n        });\n        return this;\n      };\n\n      this.unloop = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.removeAttribute(\"loop\");\n        this.unbind(\"ended.buzzloop\");\n        return this;\n      };\n\n      this.mute = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.muted = true;\n        return this;\n      };\n\n      this.unmute = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.muted = false;\n        return this;\n      };\n\n      this.toggleMute = function () {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.muted = !this.sound.muted;\n        return this;\n      };\n\n      this.isMuted = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.muted;\n      };\n\n      this.setVolume = function (volume) {\n        if (!supported) {\n          return this;\n        }\n\n        if (volume < 0) {\n          volume = 0;\n        }\n\n        if (volume > 100) {\n          volume = 100;\n        }\n\n        this.volume = volume;\n        this.sound.volume = volume / 100;\n        return this;\n      };\n\n      this.getVolume = function () {\n        if (!supported) {\n          return this;\n        }\n\n        return this.volume;\n      };\n\n      this.increaseVolume = function (value) {\n        return this.setVolume(this.volume + (value || 1));\n      };\n\n      this.decreaseVolume = function (value) {\n        return this.setVolume(this.volume - (value || 1));\n      };\n\n      this.setTime = function (time) {\n        if (!supported) {\n          return this;\n        }\n\n        var set = true;\n        this.whenReady(function () {\n          if (set === true) {\n            set = false;\n            this.sound.currentTime = time;\n          }\n        });\n        return this;\n      };\n\n      this.getTime = function () {\n        if (!supported) {\n          return null;\n        }\n\n        var time = Math.round(this.sound.currentTime * 100) / 100;\n        return isNaN(time) ? buzz.defaults.placeholder : time;\n      };\n\n      this.setPercent = function (percent) {\n        if (!supported) {\n          return this;\n        }\n\n        return this.setTime(buzz.fromPercent(percent, this.sound.duration));\n      };\n\n      this.getPercent = function () {\n        if (!supported) {\n          return null;\n        }\n\n        var percent = Math.round(buzz.toPercent(this.sound.currentTime, this.sound.duration));\n        return isNaN(percent) ? buzz.defaults.placeholder : percent;\n      };\n\n      this.setSpeed = function (duration) {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound.playbackRate = duration;\n        return this;\n      };\n\n      this.getSpeed = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.playbackRate;\n      };\n\n      this.getDuration = function () {\n        if (!supported) {\n          return null;\n        }\n\n        var duration = Math.round(this.sound.duration * 100) / 100;\n        return isNaN(duration) ? buzz.defaults.placeholder : duration;\n      };\n\n      this.getPlayed = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return timerangeToArray(this.sound.played);\n      };\n\n      this.getBuffered = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return timerangeToArray(this.sound.buffered);\n      };\n\n      this.getSeekable = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return timerangeToArray(this.sound.seekable);\n      };\n\n      this.getErrorCode = function () {\n        if (supported && this.sound.error) {\n          return this.sound.error.code;\n        }\n\n        return 0;\n      };\n\n      this.getErrorMessage = function () {\n        if (!supported) {\n          return null;\n        }\n\n        switch (this.getErrorCode()) {\n          case 1:\n            return \"MEDIA_ERR_ABORTED\";\n\n          case 2:\n            return \"MEDIA_ERR_NETWORK\";\n\n          case 3:\n            return \"MEDIA_ERR_DECODE\";\n\n          case 4:\n            return \"MEDIA_ERR_SRC_NOT_SUPPORTED\";\n\n          default:\n            return null;\n        }\n      };\n\n      this.getStateCode = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.readyState;\n      };\n\n      this.getStateMessage = function () {\n        if (!supported) {\n          return null;\n        }\n\n        switch (this.getStateCode()) {\n          case 0:\n            return \"HAVE_NOTHING\";\n\n          case 1:\n            return \"HAVE_METADATA\";\n\n          case 2:\n            return \"HAVE_CURRENT_DATA\";\n\n          case 3:\n            return \"HAVE_FUTURE_DATA\";\n\n          case 4:\n            return \"HAVE_ENOUGH_DATA\";\n\n          default:\n            return null;\n        }\n      };\n\n      this.getNetworkStateCode = function () {\n        if (!supported) {\n          return null;\n        }\n\n        return this.sound.networkState;\n      };\n\n      this.getNetworkStateMessage = function () {\n        if (!supported) {\n          return null;\n        }\n\n        switch (this.getNetworkStateCode()) {\n          case 0:\n            return \"NETWORK_EMPTY\";\n\n          case 1:\n            return \"NETWORK_IDLE\";\n\n          case 2:\n            return \"NETWORK_LOADING\";\n\n          case 3:\n            return \"NETWORK_NO_SOURCE\";\n\n          default:\n            return null;\n        }\n      };\n\n      this.set = function (key, value) {\n        if (!supported) {\n          return this;\n        }\n\n        this.sound[key] = value;\n        return this;\n      };\n\n      this.get = function (key) {\n        if (!supported) {\n          return null;\n        }\n\n        return key ? this.sound[key] : this.sound;\n      };\n\n      this.bind = function (types, func) {\n        if (!supported) {\n          return this;\n        }\n\n        types = types.split(\" \");\n\n        var self = this,\n            efunc = function efunc(e) {\n          func.call(self, e);\n        };\n\n        for (var t = 0; t < types.length; t++) {\n          var type = types[t],\n              idx = type;\n          type = idx.split(\".\")[0];\n          events.push({\n            idx: idx,\n            func: efunc\n          });\n          this.sound.addEventListener(type, efunc, true);\n        }\n\n        return this;\n      };\n\n      this.unbind = function (types) {\n        if (!supported) {\n          return this;\n        }\n\n        types = types.split(\" \");\n\n        for (var t = 0; t < types.length; t++) {\n          var idx = types[t],\n              type = idx.split(\".\")[0];\n\n          for (var i = 0; i < events.length; i++) {\n            var namespace = events[i].idx.split(\".\");\n\n            if (events[i].idx === idx || namespace[1] && namespace[1] === idx.replace(\".\", \"\")) {\n              this.sound.removeEventListener(type, events[i].func, true);\n              events.splice(i, 1);\n            }\n          }\n        }\n\n        return this;\n      };\n\n      this.bindOnce = function (type, func) {\n        if (!supported) {\n          return this;\n        }\n\n        var self = this;\n        eventsOnce[pid++] = false;\n        this.bind(type + \".\" + pid, function () {\n          if (!eventsOnce[pid]) {\n            eventsOnce[pid] = true;\n            func.call(self);\n          }\n\n          self.unbind(type + \".\" + pid);\n        });\n        return this;\n      };\n\n      this.trigger = function (types, detail) {\n        if (!supported) {\n          return this;\n        }\n\n        types = types.split(\" \");\n\n        for (var t = 0; t < types.length; t++) {\n          var idx = types[t];\n\n          for (var i = 0; i < events.length; i++) {\n            var eventType = events[i].idx.split(\".\");\n\n            if (events[i].idx === idx || eventType[0] && eventType[0] === idx.replace(\".\", \"\")) {\n              var evt = doc.createEvent(\"HTMLEvents\");\n              evt.initEvent(eventType[0], false, true);\n              evt.originalEvent = detail;\n              this.sound.dispatchEvent(evt);\n            }\n          }\n        }\n\n        return this;\n      };\n\n      this.fadeTo = function (to, duration, callback) {\n        if (!supported) {\n          return this;\n        }\n\n        if (duration instanceof Function) {\n          callback = duration;\n          duration = buzz.defaults.duration;\n        } else {\n          duration = duration || buzz.defaults.duration;\n        }\n\n        var from = this.volume,\n            delay = duration / Math.abs(from - to),\n            self = this,\n            fadeToTimeout;\n        this.play();\n\n        function doFade() {\n          clearTimeout(fadeToTimeout);\n          fadeToTimeout = setTimeout(function () {\n            if (from < to && self.volume < to) {\n              self.setVolume(self.volume += 1);\n              doFade();\n            } else if (from > to && self.volume > to) {\n              self.setVolume(self.volume -= 1);\n              doFade();\n            } else if (callback instanceof Function) {\n              callback.apply(self);\n            }\n          }, delay);\n        }\n\n        this.whenReady(function () {\n          doFade();\n        });\n        return this;\n      };\n\n      this.fadeIn = function (duration, callback) {\n        if (!supported) {\n          return this;\n        }\n\n        return this.setVolume(0).fadeTo(100, duration, callback);\n      };\n\n      this.fadeOut = function (duration, callback) {\n        if (!supported) {\n          return this;\n        }\n\n        return this.fadeTo(0, duration, callback);\n      };\n\n      this.fadeWith = function (sound, duration) {\n        if (!supported) {\n          return this;\n        }\n\n        this.fadeOut(duration, function () {\n          this.stop();\n        });\n        sound.play().fadeIn(duration);\n        return this;\n      };\n\n      this.whenReady = function (func) {\n        if (!supported) {\n          return null;\n        }\n\n        var self = this;\n\n        if (this.sound.readyState === 0) {\n          this.bind(\"canplay.buzzwhenready\", function () {\n            func.call(self);\n          });\n        } else {\n          func.call(self);\n        }\n      };\n\n      this.addSource = function (src) {\n        var self = this,\n            source = doc.createElement(\"source\");\n        source.src = src;\n\n        if (buzz.types[getExt(src)]) {\n          source.type = buzz.types[getExt(src)];\n        }\n\n        this.sound.appendChild(source);\n        source.addEventListener(\"error\", function (e) {\n          self.trigger(\"sourceerror\", e);\n        });\n        return source;\n      };\n\n      function timerangeToArray(timeRange) {\n        var array = [],\n            length = timeRange.length - 1;\n\n        for (var i = 0; i <= length; i++) {\n          array.push({\n            start: timeRange.start(i),\n            end: timeRange.end(i)\n          });\n        }\n\n        return array;\n      }\n\n      function getExt(filename) {\n        return filename.split(\".\").pop();\n      }\n\n      if (supported && src) {\n        for (var i in buzz.defaults) {\n          if (buzz.defaults.hasOwnProperty(i)) {\n            if (options[i] === undefined) {\n              options[i] = buzz.defaults[i];\n            }\n          }\n        }\n\n        this.sound = doc.createElement(\"audio\");\n\n        if (options.crossOrigin !== null) {\n          this.sound.crossOrigin = options.crossOrigin;\n        }\n\n        if (options.webAudioApi) {\n          var audioCtx = buzz.getAudioContext();\n\n          if (audioCtx) {\n            this.source = audioCtx.createMediaElementSource(this.sound);\n            this.source.connect(audioCtx.destination);\n          }\n        }\n\n        if (src instanceof Array) {\n          for (var j in src) {\n            if (src.hasOwnProperty(j)) {\n              this.addSource(src[j]);\n            }\n          }\n        } else if (options.formats.length) {\n          for (var k in options.formats) {\n            if (options.formats.hasOwnProperty(k)) {\n              this.addSource(src + \".\" + options.formats[k]);\n            }\n          }\n        } else {\n          this.addSource(src);\n        }\n\n        if (options.loop) {\n          this.loop();\n        }\n\n        if (options.autoplay) {\n          this.sound.autoplay = \"autoplay\";\n        }\n\n        if (options.preload === true) {\n          this.sound.preload = \"auto\";\n        } else if (options.preload === false) {\n          this.sound.preload = \"none\";\n        } else {\n          this.sound.preload = options.preload;\n        }\n\n        this.setVolume(options.volume);\n        buzz.sounds.push(this);\n      }\n    },\n    group: function group(sounds) {\n      sounds = argsToArray(sounds, arguments);\n\n      this.getSounds = function () {\n        return sounds;\n      };\n\n      this.add = function (soundArray) {\n        soundArray = argsToArray(soundArray, arguments);\n\n        for (var a = 0; a < soundArray.length; a++) {\n          sounds.push(soundArray[a]);\n        }\n      };\n\n      this.remove = function (soundArray) {\n        soundArray = argsToArray(soundArray, arguments);\n\n        for (var a = 0; a < soundArray.length; a++) {\n          for (var i = 0; i < sounds.length; i++) {\n            if (sounds[i] === soundArray[a]) {\n              sounds.splice(i, 1);\n              break;\n            }\n          }\n        }\n      };\n\n      this.load = function () {\n        fn(\"load\");\n        return this;\n      };\n\n      this.play = function () {\n        fn(\"play\");\n        return this;\n      };\n\n      this.togglePlay = function () {\n        fn(\"togglePlay\");\n        return this;\n      };\n\n      this.pause = function (time) {\n        fn(\"pause\", time);\n        return this;\n      };\n\n      this.stop = function () {\n        fn(\"stop\");\n        return this;\n      };\n\n      this.mute = function () {\n        fn(\"mute\");\n        return this;\n      };\n\n      this.unmute = function () {\n        fn(\"unmute\");\n        return this;\n      };\n\n      this.toggleMute = function () {\n        fn(\"toggleMute\");\n        return this;\n      };\n\n      this.setVolume = function (volume) {\n        fn(\"setVolume\", volume);\n        return this;\n      };\n\n      this.increaseVolume = function (value) {\n        fn(\"increaseVolume\", value);\n        return this;\n      };\n\n      this.decreaseVolume = function (value) {\n        fn(\"decreaseVolume\", value);\n        return this;\n      };\n\n      this.loop = function () {\n        fn(\"loop\");\n        return this;\n      };\n\n      this.unloop = function () {\n        fn(\"unloop\");\n        return this;\n      };\n\n      this.setSpeed = function (speed) {\n        fn(\"setSpeed\", speed);\n        return this;\n      };\n\n      this.setTime = function (time) {\n        fn(\"setTime\", time);\n        return this;\n      };\n\n      this.set = function (key, value) {\n        fn(\"set\", key, value);\n        return this;\n      };\n\n      this.bind = function (type, func) {\n        fn(\"bind\", type, func);\n        return this;\n      };\n\n      this.unbind = function (type) {\n        fn(\"unbind\", type);\n        return this;\n      };\n\n      this.bindOnce = function (type, func) {\n        fn(\"bindOnce\", type, func);\n        return this;\n      };\n\n      this.trigger = function (type) {\n        fn(\"trigger\", type);\n        return this;\n      };\n\n      this.fade = function (from, to, duration, callback) {\n        fn(\"fade\", from, to, duration, callback);\n        return this;\n      };\n\n      this.fadeIn = function (duration, callback) {\n        fn(\"fadeIn\", duration, callback);\n        return this;\n      };\n\n      this.fadeOut = function (duration, callback) {\n        fn(\"fadeOut\", duration, callback);\n        return this;\n      };\n\n      function fn() {\n        var args = argsToArray(null, arguments),\n            func = args.shift();\n\n        for (var i = 0; i < sounds.length; i++) {\n          sounds[i][func].apply(sounds[i], args);\n        }\n      }\n\n      function argsToArray(array, args) {\n        return array instanceof Array ? array : Array.prototype.slice.call(args);\n      }\n    },\n    all: function all() {\n      return new buzz.group(buzz.sounds);\n    },\n    isSupported: function isSupported() {\n      return !!buzz.el.canPlayType;\n    },\n    isOGGSupported: function isOGGSupported() {\n      return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/ogg; codecs=\"vorbis\"');\n    },\n    isWAVSupported: function isWAVSupported() {\n      return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/wav; codecs=\"1\"');\n    },\n    isMP3Supported: function isMP3Supported() {\n      return !!buzz.el.canPlayType && buzz.el.canPlayType(\"audio/mpeg;\");\n    },\n    isAACSupported: function isAACSupported() {\n      return !!buzz.el.canPlayType && (buzz.el.canPlayType(\"audio/x-m4a;\") || buzz.el.canPlayType(\"audio/aac;\"));\n    },\n    toTimer: function toTimer(time, withHours) {\n      var h, m, s;\n      h = Math.floor(time / 3600);\n      h = isNaN(h) ? \"--\" : h >= 10 ? h : \"0\" + h;\n      m = withHours ? Math.floor(time / 60 % 60) : Math.floor(time / 60);\n      m = isNaN(m) ? \"--\" : m >= 10 ? m : \"0\" + m;\n      s = Math.floor(time % 60);\n      s = isNaN(s) ? \"--\" : s >= 10 ? s : \"0\" + s;\n      return withHours ? h + \":\" + m + \":\" + s : m + \":\" + s;\n    },\n    fromTimer: function fromTimer(time) {\n      var splits = time.toString().split(\":\");\n\n      if (splits && splits.length === 3) {\n        time = parseInt(splits[0], 10) * 3600 + parseInt(splits[1], 10) * 60 + parseInt(splits[2], 10);\n      }\n\n      if (splits && splits.length === 2) {\n        time = parseInt(splits[0], 10) * 60 + parseInt(splits[1], 10);\n      }\n\n      return time;\n    },\n    toPercent: function toPercent(value, total, decimal) {\n      var r = Math.pow(10, decimal || 0);\n      return Math.round(value * 100 / total * r) / r;\n    },\n    fromPercent: function fromPercent(percent, total, decimal) {\n      var r = Math.pow(10, decimal || 0);\n      return Math.round(total / 100 * percent * r) / r;\n    }\n  };\n  return buzz;\n});\n\n//# sourceURL=webpack:///./node_modules/buzz/dist/buzz.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var buzz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buzz */ \"./node_modules/buzz/dist/buzz.js\");\n/* harmony import */ var buzz__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(buzz__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar rataplanMainSound = new buzz__WEBPACK_IMPORTED_MODULE_2___default.a.sound('sounds/rataplan-main.mp3');\nvar rataplanPointSound = new buzz__WEBPACK_IMPORTED_MODULE_2___default.a.sound('sounds/rataplan-point.mp3');\nrataplanMainSound.setVolume(100);\nrataplanPointSound.setVolume(100);\nvar startButton = document.querySelector('.controls__control--start');\nvar stopButton = document.querySelector('.controls__control--stop');\nvar isActiveMetronome = false;\nstartButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  startButton.style.display = 'none';\n  stopButton.style.display = 'block';\n  stopButton.classList.add('animation-pulse');\n  isActiveMetronome = true;\n  startMetronome([rataplanMainSound, rataplanPointSound, rataplanPointSound]);\n});\nstopButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  startButton.style.display = 'block';\n  stopButton.style.display = 'none';\n  stopButton.classList.remove('animation-pulse');\n  isActiveMetronome = false;\n});\n\nfunction playedSound(sound, index) {\n  return new Promise(function (resolve) {\n    if (!isActiveMetronome) return resolve();\n    sound.play();\n\n    if (index % 3 === 0) {\n      stopButton.classList.add('animation-pulse');\n      isActiveMetronome = isActiveMetronome;\n    }\n\n    sound.bindOnce('ended', function () {\n      resolve();\n\n      if (index % 3 === 2) {\n        stopButton.classList.remove('animation-pulse');\n        isActiveMetronome = isActiveMetronome;\n      }\n    });\n  });\n}\n\nfunction startMetronome(_x) {\n  return _startMetronome.apply(this, arguments);\n}\n\nfunction _startMetronome() {\n  _startMetronome = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(sounds) {\n    var i;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = 0;\n\n          case 1:\n            if (!isActiveMetronome) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return playedSound(sounds[i % 3], [i % 3]);\n\n          case 4:\n            i++;\n            _context.next = 1;\n            break;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _startMetronome.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ })

/******/ });